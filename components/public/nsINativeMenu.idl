/* -*- Mode: C++; tab-aWidth: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Prism
 *
 * The Initial Developer of the Original Code is
 * Matthew Gertner.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Matthew Gertner <matthew.gertner@gmail.com> (Original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
 
/* Development of this Contribution was supported by Yahoo! Inc. */

#include "nsISupports.idl"

interface nsIDOMEventListener;
interface nsIDOMWindow;
interface nsISimpleEnumerator;

/**
 * Support for platform-native menus.
 */
[scriptable, uuid(9d3547d0-ff55-11dc-95ff-0800200c9a66)]
interface nsINativeMenu : nsISupports
{
  [noscript] readonly attribute voidPtr handle;
  readonly attribute nsISimpleEnumerator items;

  /**
   * Add the item to the menu.
   *
   * @param id Unique identifier for the menu item.
   * @param label Label for the menu item.
   * @param listener Listener triggered when the menu item is selected.
   **/
  void addMenuItem(in AString id, in AString label, in nsIDOMEventListener listener);

  /**
   * Add a submenu.
   *
   * @param label Label for the submenu.
   * @returns The new menu.
   */
  nsINativeMenu addSubmenu(in AString id, in AString label);

  /**
   * Remove the item from the menu.
   **/
  void removeMenuItem(in AString id);
  
  /**
   * Remove all items from the menu.
   */
  void removeAllMenuItems();
};
