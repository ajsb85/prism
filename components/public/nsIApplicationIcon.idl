/* -*- Mode: C++; tab-aWidth: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Prism
 *
 * The Initial Developer of the Original Code is
 * Matthew Gertner.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Matthew Gertner <matthe.gertner@gmail.com> (Original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;
interface nsIFile;
interface nsINativeMenu;
interface nsIObserver;

/**
 * Operating system tile (i.e. icon) representing the application. Examples are
 * Mac OS X dock tiles and Windows system tray icons.
 */
[scriptable, uuid(9c25e3d0-c432-11dc-95ff-0800200c9a66)]
interface nsIApplicationIcon : nsISupports
{
  const PRUint32 HIDE_ON_MINIMIZE = 1;
  const PRUint32 HIDE_ON_CLOSE = 2;

  /**
   * Title of the tile.
   */
  attribute AString title;

  /**
   * Menu associated with the tile.
   */
  readonly attribute nsINativeMenu menu;
  
  /**
   * Image represented by the tile.
   */
  attribute AString imageSpec;

  /**
   * Text used to badge the tile.
   */
  attribute AString badgeText;

  /**
   * Specify window behavior, can currently minimize and close to icon (assuming platform support).
   */
  attribute PRUint32 behavior;

  /**
   * Show the application tile in the appropriate location (tray, dock, etc.).
   * Note: it would be nice if the tile could get the window automatically from
   * the platform glue, but apparently we'll have to port nsPlatformGlue.js to C++
   * if we want that.
   */
  void show();

  /**
   * Hide the application tile.
   */
  void hide();
  
  /**
   * Minimize the window to the notification area.
   */
  void minimize();
  
  /**
   * Display a popup over the icon. Displays a normal alert (using nsIAlertsService) on
   * platforms that don't support balloon tips.
   */
  void showNotification(in AString title,
                      in AString text,
                      in PRUint32 timeout,
                      [optional] in boolean textClickable,
                      [optional] in nsIObserver alertListener);
};
